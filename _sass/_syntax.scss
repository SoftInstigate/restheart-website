@use "variables";

// Syntax highlighting styles
// Based on rouge-vim.css but cleaned up and organized

// Code blocks
pre {
  color: variables.$code-text;
  background-color: variables.$code-background;
  border: 2px solid rgba(variables.$color-primary, 0.3);
  border-radius: variables.$border-radius;

  code {
    white-space: pre-wrap;
    background-color: transparent;
    border-radius: 0;
  }
}

.highlight {
  pre {
    background-color: variables.$code-background;
  }

  .hll {
    background-color: variables.$code-background;
  }

  // Base styles
  .c,
  .cm,
  .cp,
  .c1 {
    color: variables.$code-comment;
  } /* Comment */
  .err {
    color: variables.$code-text;
  } /* Error */
  .g {
    color: variables.$code-text;
  } /* Generic */
  .k,
  .kc,
  .kn,
  .kp,
  .kr {
    color: #f8a839;
  } /* Keyword */
  .kd,
  .kt,
  .nb {
    color: #00cd00;
  } /* Keyword Declaration, Type, Builtin */
  .l {
    color: variables.$code-text;
  } /* Literal */
  .n,
  .na,
  .nd,
  .ni,
  .ne,
  .nf,
  .nl,
  .nn,
  .nx,
  .py,
  .nt {
    color: variables.$code-text;
  } /* Name */
  .o {
    color: variables.$code-text;
  } /* Operator */
  .x {
    color: variables.$code-text;
  } /* Other */
  .p {
    color: variables.$code-text;
  } /* Punctuation */

  // Comment styles
  .cm {
    color: variables.$code-comment;
  } /* Comment.Multiline */
  .cp {
    color: variables.$code-comment;
  } /* Comment.Preproc */
  .c1 {
    color: variables.$code-comment;
  } /* Comment.Single */
  .cs {
    color: #cd0000;
    font-weight: bold;
  } /* Comment.Special */

  // Generic styles
  .gd {
    color: #cd0000;
  } /* Generic.Deleted */
  .ge {
    color: variables.$code-text;
    font-style: italic;
  } /* Generic.Emph */
  .gr {
    color: #ff0000;
  } /* Generic.Error */
  .gh {
    color: variables.$code-comment;
    font-weight: bold;
  } /* Generic.Heading */
  .gi {
    color: #00cd00;
  } /* Generic.Inserted */
  .go {
    color: #808080;
  } /* Generic.Output */
  .gp {
    color: variables.$code-comment;
    font-weight: bold;
  } /* Generic.Prompt */
  .gs {
    color: variables.$code-text;
    font-weight: bold;
  } /* Generic.Strong */
  .gu {
    color: #800080;
    font-weight: bold;
  } /* Generic.Subheading */
  .gt {
    color: variables.$code-variable;
  } /* Generic.Traceback */

  // Literal styles
  .ld {
    color: variables.$code-text;
  } /* Literal.Date */
  .m,
  .mf,
  .mh,
  .mi,
  .mo,
  .il {
    color: variables.$code-variable;
  } /* Literal.Number */
  .s,
  .sb,
  .sc,
  .sd,
  .s2,
  .se,
  .sh,
  .si,
  .sx,
  .sr,
  .s1,
  .ss {
    color: variables.$code-string;
  } /* Literal.String */

  // Name styles
  .nc {
    color: #f8a839;
  } /* Name.Class */
  .no {
    color: variables.$code-text;
  } /* Name.Constant */
  .nv,
  .vc,
  .vg,
  .vi {
    color: variables.$code-variable;
  } /* Name.Variable */

  // Operator styles
  .ow {
    color: variables.$code-variable;
  } /* Operator.Word */

  // Text styles
  .w {
    color: variables.$code-text;
  } /* Text.Whitespace */

  // Special outputs
  .bp {
    color: variables.$code-string;
  } /* Name.Builtin.Pseudo */
}

// Special styling for language display
.listingblock {
  position: relative;

  code[data-lang]:before {
    content: attr(data-lang);
    position: absolute;
    top: 0.5rem;
    right: 1rem;
    font-size: 0.8em;
    color: rgba(variables.$code-text, 0.6);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  &:hover code[data-lang]:before {
    color: rgba(variables.$code-text, 0.8);
  }
}

// Terminal/command styling
.listingblock.terminal pre .command:before {
  content: "$ ";
  color: variables.$code-comment;
}
